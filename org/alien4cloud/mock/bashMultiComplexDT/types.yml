tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: org.alien4cloud.mock.bashMultiComplexDT
  template_version: 2.2.0-SNAPSHOT
  template_author: SLT

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.alien4cloud.mock.pub:2.2.0-SNAPSHOT

description: >
  Mock types with bash implementations.

data_types:
    
  org.alien4cloud.mock.bashMultiComplexDT.datatypes.ComplexDT:
    derived_from: tosca.datatypes.Root
    description: A usefull datatype 
    properties:
      name1:
        type: string
        description: |
          An optional value
      name2:
        type: string
        description: |
          An optional value
      numb1:
        type: integer
        required: false
      flag1:
        type: boolean
        required: false
          
  org.alien4cloud.mock.bashMultiComplexDT.datatypes.MoreComplexDT:
    derived_from: tosca.datatypes.Root
    description: A usefull datatype 
    properties:
      field1:
        type: org.alien4cloud.mock.bashMultiComplexDT.datatypes.ComplexDT
        description: |
          An optional value
      field2:
        type: org.alien4cloud.mock.bashMultiComplexDT.datatypes.ComplexDT
        description: |
          An optional value          
      name1:
        type: string
        description: |
          An optional value
      name2:
        type: string
        description: |
          An optional value
      alist1:
        type: list
        required: false
        entry_schema: 
          type: org.alien4cloud.mock.bashMultiComplexDT.datatypes.ComplexDT
      alist2:
        type: list
        required: false
        entry_schema: 
          type: string
      amap1:
        type: map
        required: false
        entry_schema:
          type: org.alien4cloud.mock.bashMultiComplexDT.datatypes.ComplexDT
      amap2:
        type: map
        required: false
        entry_schema:
          type: string
        
node_types:

  org.alien4cloud.mock.bashMultiComplexDT.nodes.BashMultiComplexDT:
    description: |
      A mock that implements juste minimum operations to fast start & stop.
    derived_from: org.alien4cloud.mock.pub.nodes.AbstractMockHost
    properties:
      morecomplex:
        type: org.alien4cloud.mock.bashMultiComplexDT.datatypes.MoreComplexDT
        required: false      
    interfaces:
      Standard:
        start:
          inputs:
            val1: { get_property: [ SELF, "morecomplex.name1" ] }
            val2: { get_property: [ SELF, "morecomplex.name2" ] }
            MORECOMPLEX: { get_property: [ SELF, "morecomplex" ] }
            operation: "start"
            duration: { get_property: [ SELF, duration ] }
            variation: { get_property: [ SELF, variation ] }
            weight: 20
            log_length: { get_property: [ SELF, log_length ] }
          implementation: scripts/operation.sh
        stop:
          inputs:
            operation: "stop"
            duration: { get_property: [ SELF, duration ] }
            variation: { get_property: [ SELF, variation ] }
            weight: 20
            log_length: { get_property: [ SELF, log_length ] }
          implementation: scripts/operation.sh
          