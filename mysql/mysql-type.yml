tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03
description: MySQL RDBMS installation on a specific mounted volume path.
template_name: mysql-type
template_version: 2.0.0-SNAPSHOT
template_author: FastConnect

imports:
  - "tosca-normative-types:1.0.0-ALIEN12"

node_types:
  # note that this type is just used for simple samples. From a perfect TOSCA modeling perspective we should actually separate the MySQL DBMS and Database types.
  alien.nodes.Mysql:
    derived_from: tosca.nodes.Database
    description: >
      A node to install MySQL v5.5 database with data
      on a specific attached volume.
    requirements:
      - host: tosca.nodes.Compute
        type: tosca.relationships.HostedOn
    capabilities:
      database_endpoint: alien.capabilities.MysqlDatabaseEndpoint
    tags:
      icon: /images/mysql.png
    properties:
      port:
        type: integer
        default: 3306
        description: The port on which the underlying database service will listen to data.
      name:
        type: string
        required: true
        default: wordpress
        description: The logical name of the database.
      db_user:
        type: string
        default: pass
        description: The special user account used for database administration.
      db_password:
        type: string
        default: pass
        description: The password associated with the user account provided in the ‘db_user’ property.
      bind_address:
        type: boolean
        default: true
        required: false
        description: If true,the server accepts TCP/IP connections on all server host IPv4 interfaces.
      storage_path:
        type: string
        default: /mountedStorage
        constraints:
          - valid_values: [ "/mountedStorage", "/var/mysql" ]
    interfaces:
      Standard:
        create: scripts/install_mysql.sh
        start:
          inputs:
            VOLUME_HOME: { get_property: [SELF, storage_path] }
            PORT: { get_property: [SELF, port] }
            DB_NAME: { get_property: [SELF, name] }
            DB_USER: { get_property: [SELF, db_user] }
            DB_PASSWORD: { get_property: [SELF, db_password] }
            BIND_ADDRESS: { get_property: [SELF, bind_address] }
          implementation: scripts/start_mysql.sh
    artifacts:
      - configs: configs
        type: tosca.artifacts.File

capability_types:
  alien.capabilities.MysqlDatabaseEndpoint:
      derived_from: tosca.capabilities.Endpoint.Database
