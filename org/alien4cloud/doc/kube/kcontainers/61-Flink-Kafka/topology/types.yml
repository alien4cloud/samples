tosca_definitions_version: alien_dsl_3_0_0

metadata:
  template_name: FlinkKafka
  template_version: 0.1.0-SNAPSHOT
  template_author: admin

description: ""

imports:
  - org.alien4cloud.doc.kube.kcontainers.61-Flink-Kafka.types:2.2.0-SNAPSHOT
  - tosca-normative-types:1.0.0-ALIEN20
  - org.alien4cloud.doc.kube.kcontainers.pub:2.2.0-SNAPSHOT
  - org.alien4cloud.kubernetes.api:3.1.0
  - artemis.nexus.pub:2.1.0-SNAPSHOT
  - docker-types:3.0.0
  - alien-base-types:3.0.0
  - artemis.kafka.pub:2.1.0-SNAPSHOT

topology_template:
  inputs:
    RpcAddress:
      type: string
      required: true
      default: flinkjobmanager
    tasksvc:
      type: string
      required: false
      constraints:
        - pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
      description: |
        Usually, the service name is generated by the plugin. If you need to define a static service name, you can define it using this property.
        253 characters and consist of lower case alphanumeric characters, -, and .
    proxysvc:
      type: string
      required: true
      default: tasksvc
    jobsvc:
      type: string
      required: false
      constraints:
        - pattern: "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
      description: |
        Usually, the service name is generated by the plugin. If you need to define a static service name, you can define it using this property.
        253 characters and consist of lower case alphanumeric characters, -, and .
  node_templates:
    KubeCluster:
      metadata:
        a4c_edit_x: "-30"
        a4c_edit_y: 1
      type: org.alien4cloud.kubernetes.api.types.nodes.KubeCluster
      capabilities:
        k8s_endpoint:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    KafkaJobManager:
      metadata:
        a4c_edit_x: 240
        a4c_edit_y: 57
      type: org.alien4cloud.doc.kube.kcontainers.61-Flink-Kafka.types.nodes.KafkaJobManager
      properties:
        RpcAddress: { get_input: RpcAddress }
        container: 
          args: 
            - jobmanager
          imagePullPolicy: Always
          image: "flink:latest"
        config_settings: 
          - input_prefix: "CFG_"
            mount_path: "/tmp/cfg"
            config_path: config
      requirements:
        - hostedOnDuJobManagerHost:
            type_requirement: host
            node: DU_JobManager
            capability: org.alien4cloud.kubernetes.api.capabilities.KubeContainerHost
            relationship: tosca.relationships.HostedOn
        - connectsToTopicServiceKafka_topic:
            type_requirement: kafka
            node: TopicService
            capability: artemis.kafka.pub.capabilities.KafkaTopic
            relationship: tosca.relationships.ConnectsTo
        - connectsToNexusServiceNexus_endpoint:
            type_requirement: nexus
            node: NexusService
            capability: artemis.nexus.pub.capabilities.Nexus
            relationship: tosca.relationships.ConnectsTo
      capabilities:
        rpc:
          properties:
            port: 6123
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        blob:
          properties:
            port: 6124
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        query:
          properties:
            port: 6125
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        ui:
          properties:
            port: 8081
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    TaskManager:
      metadata:
        a4c_edit_x: 201
        a4c_edit_y: "-101"
      type: org.alien4cloud.doc.kube.kcontainers.61-Flink-Kafka.types.nodes.TaskManager
      properties:
        RpcAddress: { get_input: RpcAddress }
        container: 
          args: 
            - taskmanager
            - "-Dtaskmanager.host=$(K8S_POD_IP)"
          imagePullPolicy: Always
          image: "flink:latest"
        proxysvc: { get_input: proxysvc }
      requirements:
        - hostedOnDuTaskManagerHost:
            type_requirement: host
            node: DU_TaskManager
            capability: org.alien4cloud.kubernetes.api.capabilities.KubeContainerHost
            relationship: tosca.relationships.HostedOn
      capabilities:
        data:
          properties:
            port: 6121
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        rpc:
          properties:
            port: 6122
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        query:
          properties:
            port: 6125
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    TopicService:
      metadata:
        a4c_edit_x: 893
        a4c_edit_y: "-13"
      type: artemis.kafka.pub.nodes.TopicService
      capabilities:
        kafka_topic:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    NexusService:
      metadata:
        a4c_edit_x: 867
        a4c_edit_y: "-108"
      type: artemis.nexus.pub.nodes.NexusService
      capabilities:
        nexus_endpoint:
          properties:
            port: 443
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    Tasksvc:
      metadata:
        a4c_edit_x: 543
        a4c_edit_y: "-259"
      type: org.alien4cloud.kubernetes.api.types.KubeService
      properties:
        service_name: { get_input: tasksvc }
        apiVersion: v1
        kind: Service
        spec: 
          service_type: ClusterIP
      requirements:
        - connectsToTaskManagerData:
            type_requirement: expose
            node: TaskManager
            capability: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
            relationship: tosca.relationships.ConnectsTo
      capabilities:
        service_endpoint:
          properties:
            proxy_for: expose
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    UI:
      metadata:
        a4c_edit_x: 545
        a4c_edit_y: 220
      type: org.alien4cloud.kubernetes.api.types.KubeService
      properties:
        apiVersion: v1
        kind: Service
        spec: 
          service_type: NodePort
      requirements:
        - connectsToKafkaJobManagerUi:
            type_requirement: expose
            node: KafkaJobManager
            capability: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
            relationship: tosca.relationships.ConnectsTo
      capabilities:
        service_endpoint:
          properties:
            proxy_for: expose
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    DU_JobManager:
      metadata:
        a4c_edit_x: 638
        a4c_edit_y: "-32"
      type: org.alien4cloud.kubernetes.api.types.KubeDeployment
      properties:
        apiVersion: "apps/v1"
        kind: Deployment
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    DU_TaskManager:
      metadata:
        a4c_edit_x: 1337
        a4c_edit_y: "-377"
      type: org.alien4cloud.kubernetes.api.types.KubeDeployment
      properties:
        apiVersion: "apps/v1"
        kind: Deployment
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    JobSvc:
      metadata:
        a4c_edit_x: 433
        a4c_edit_y: "-142"
      type: org.alien4cloud.kubernetes.api.types.KubeService
      properties:
        service_name: { get_input: jobsvc }
        apiVersion: v1
        kind: Service
        spec: 
          service_type: ClusterIP
      requirements:
        - connectsToKafkaJobManagerQuery:
            type_requirement: expose
            node: KafkaJobManager
            capability: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
            relationship: tosca.relationships.ConnectsTo
        - connectsToKafkaJobManagerRpc:
            type_requirement: expose
            node: KafkaJobManager
            capability: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
            relationship: tosca.relationships.ConnectsTo
        - connectsToKafkaJobManagerUi:
            type_requirement: expose
            node: KafkaJobManager
            capability: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
            relationship: tosca.relationships.ConnectsTo
        - connectsToKafkaJobManagerBlob:
            type_requirement: expose
            node: KafkaJobManager
            capability: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
            relationship: tosca.relationships.ConnectsTo
      capabilities:
        service_endpoint:
          properties:
            proxy_for: expose
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
