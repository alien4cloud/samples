tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: org.alien4cloud.doc.kube.kcontainers.61-Flink-Kafka.types
  template_version: 2.2.0-SNAPSHOT
  template_author: alien4cloud

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - docker-types:3.0.0
  - org.alien4cloud.kubernetes.api:3.1.0
  - org.alien4cloud.doc.kube.kcontainers.pub:2.2.0-SNAPSHOT
  - artemis.kafka.pub:2.1.0-SNAPSHOT
  - artemis.nexus.pub:2.1.0-SNAPSHOT  


node_types:

  org.alien4cloud.doc.kube.kcontainers.61-Flink-Kafka.types.nodes.KafkaJobManager:
    derived_from: org.alien4cloud.kubernetes.api.types.KubeConfigurableContainer
    properties:
      RpcAddress:
        type: string
        default: "flinkjobmanager"
      container:
        type: org.alien4cloud.kubernetes.api.datatypes.ContainerSpec
        default:
          imagePullPolicy: Always
          image: "flink:latest"
    capabilities:
      rpc:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
      blob:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
      query:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
      ui:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
    requirements:
      - nexus:
          capability: artemis.nexus.pub.capabilities.Nexus
          relationship: tosca.relationships.ConnectsTo
          occurrences: [0, 1]    
      - kafka:
         capability: artemis.kafka.pub.capabilities.KafkaTopic
         relationship: tosca.relationships.ConnectsTo
         occurrences: [0, 1]        
    interfaces:
      Standard:
        inputs:
          ENV_JOB_MANAGER_RPC_ADDRESS: { get_property: [SELF, RpcAddress] }
          CFG_KAFKA_SERVER: { get_attribute: [TARGET, kafka, kafka_topic, ip_address] }
          CFG_NEXUS_SRV: { get_attribute: [TARGET, nexus, nexus_endpoint, ip_address] }
          CFG_URL_PATH: { get_property: [TARGET, nexus, nexus_endpoint, url_path] }
          
  org.alien4cloud.doc.kube.kcontainers.61-Flink-Kafka.types.nodes.TaskManager:
    derived_from: org.alien4cloud.kubernetes.api.types.KubeConfigurableContainer
    properties:
      RpcAddress:
        type: string
        default: "flinkjobmanager"
      container:
        type: org.alien4cloud.kubernetes.api.datatypes.ContainerSpec
        default:
          imagePullPolicy: Always
          image: "flink:latest"
      proxysvc:
        type: string
        default: "tasksvc"
    capabilities:
      data:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
      rpc:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
      query:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http      
    interfaces:
      Standard:
        inputs:
          ENV_JOB_MANAGER_RPC_ADDRESS: { get_property: [SELF, RpcAddress] }
          ENV_K8S_POD_IP: { get_property: [SELF, proxysvc] }          
