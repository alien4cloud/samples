tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: org.alien4cloud.doc.kube.kcontainers.11-Apache-Proxy.types
  template_version: 2.2.0-SNAPSHOT
  template_author: alien4cloud

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - docker-types:3.0.0
  - org.alien4cloud.kubernetes.api:3.1.0
  - org.alien4cloud.doc.kube.kcontainers.pub:2.2.0-SNAPSHOT
  - docker-types:3.0.0
  - alien-base-types:3.0.0

node_types:

  org.alien4cloud.doc.kube.kcontainers.11-Apache-Proxy.types.nodes.ApacheServer:
    derived_from: org.alien4cloud.kubernetes.api.types.KubeContainer
    properties:
      container:
        type: org.alien4cloud.kubernetes.api.datatypes.ContainerSpec
        default:
          imagePullPolicy: Always
          image: "httpd:latest"
      server_msg:
        type: string
        default: "message1,message2,message3"
    capabilities:
      server_endpoint:
        type: org.alien4cloud.doc.kube.kcontainers.11-Apache-Proxy.types.capabilities.ApacheServer

  org.alien4cloud.doc.kube.kcontainers.11-Apache-Proxy.types.nodes.ApacheClient:
    derived_from: org.alien4cloud.kubernetes.api.types.KubeContainer
    properties:
      container:
        type: org.alien4cloud.kubernetes.api.datatypes.ContainerSpec
        default:
          imagePullPolicy: Always
          image: "httpd:latest"
    capabilities:
      http_endpoint:
        type: org.alien4cloud.doc.kube.kcontainers.pub.capabilities.Http
    requirements:
      - server:
          capability: org.alien4cloud.doc.kube.kcontainers.11-Apache-Proxy.types.capabilities.ApacheServer
          relationship: tosca.relationships.ConnectsTo
          occurrences: [1, 1]
    interfaces:
      Standard:
        inputs:
          ENV_SERVER_IP: { get_attribute: [TARGET, server, server_endpoint, ip_address] }
          ENV_SERVER_PORT: { get_property: [TARGET, server, server_endpoint, port] }
          ENV_SERVER_USERNAME: { get_property: [TARGET, server, server_endpoint, username] }
          ENV_SERVER_MESSAGE: { get_property: [TARGET, server, server_msg] }
          ENV_MESG1: { token: [ get_property: [ TARGET, server, server_msg ], ",", 0 ] }
          ENV_MESG2: { token: [ get_property: [ TARGET, server, server_msg ], ",", 1 ] }

capability_types:

  org.alien4cloud.doc.kube.kcontainers.11-Apache-Proxy.types.capabilities.ApacheServer:
    derived_from: org.alien4cloud.kubernetes.api.capabilities.KubeEndpoint
    properties:
      port:
        type: integer
        default: 80
      username:
        type: string