tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: org.alien4cloud.mock.bashExtended
  template_version: 2.2.0-SNAPSHOT
  template_author: Gandalfe

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.alien4cloud.mock.pub:2.2.0-SNAPSHOT
  - org.alien4cloud.mock.bash:2.2.0-SNAPSHOT  

description: >
  Mock types with bash implementations with a relation types which fails at all time

# TODO: apache port attribute should be used by RegistryConfigurer, and Generic & GenericHost
node_types:


  org.alien4cloud.mock.bash.nodes.BashExtendedMock:
    description: |
      A software component that hosts MockComponent.
    derived_from: org.alien4cloud.mock.bash.nodes.BashMock
    interfaces:
      Standard:
        create:
          inputs:
            operation: "create"
            duration: { get_property: [ SELF, duration ] }
            comment: { get_property: [ SELF, comment ] }
          implementation: scripts/operation.sh
        configure:
          inputs:
            operation: "configure"
            duration: { get_property: [ SELF, duration ] }
            comment: { get_property: [ SELF, comment ] }
          implementation: scripts/operation.sh
        start:
          inputs:
            operation: "start"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
        stop:
          inputs:
            operation: "stop"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
        delete:
          inputs:
            operation: "delete"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
    capabilities:
      mock_endpoint:
        type: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
        occurrences: [0, unbounded]
      custommock_endpoint: 
        type: org.alien4cloud.mock.bashExtended.capabilities.BashCustomComponentEndpoint
        occurrences: [0, unbounded]        
    requirements:
      - mock_endpoint:
          capability: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
          relationship: org.alien4cloud.mock.bash.relationships.BashComponentConnectToComponent
          occurrences: [0, unbounded]
    artifacts:
      - data:
          file: data/data.txt
          type: tosca.artifacts.File

relationship_types:
  org.alien4cloud.mock.bash.relationships.CustomPropertiesBashComponentConnectToComponent:
    derived_from: org.alien4cloud.mock.pub.relationships.AbstractComponentConnectToComponent
    properties:
      field1:
        type: string
        required: false
      field2:
        type: string
        required: false
    valid_target_types: [ org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint ]
    interfaces:
      configure:
        pre_configure_source:
          inputs:
            operation: "pre_configure_source"
            duration: { get_property: [ SOURCE, duration ] }
            field1: { get_property: [ SELF, field1 ] }
            field2: { get_property: [ SELF, field2 ] }
            prop1: { get_property: [ TARGET, custommock_endpoint, prop1 ] }               
          implementation: scripts/custom_relation_properties_display.sh
        pre_configure_target:
          inputs:
            operation: "pre_configure_target"
            duration: { get_property: [ SOURCE, duration ] }
            field1: { get_property: [ SELF, field1 ] }
            field2: { get_property: [ SELF, field2 ] }
            prop1: { get_property: [ TARGET, custommock_endpoint, prop1 ] }   
          implementation: scripts/custom_relation_properties_display.sh
        
  org.alien4cloud.mock.bash.relationships.PostConfigureFailBashComponentConnectToComponent:
    derived_from: org.alien4cloud.mock.pub.relationships.AbstractComponentConnectToComponent
    valid_target_types: [ org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint ]
    interfaces:
      configure:
        pre_configure_source:
          inputs:
            operation: "pre_configure_source"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        pre_configure_target:
          inputs:
            operation: "pre_configure_target"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        post_configure_source:
          inputs:
            operation: "post_configure_source"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/fail.sh
        post_configure_target:
          inputs:
            operation: "post_configure_target"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        add_target:
          inputs:
            operation: "add_target"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        add_source:
          inputs:
            operation: "add_source"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        remove_target:
          inputs:
            operation: "remove_target"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        remove_source:
          inputs:
            operation: "remove_source"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
          
          
capability_types:

  org.alien4cloud.mock.bashExtended.capabilities.BashCustomComponentEndpoint:
    derived_from: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
    properties:
      prop1:
        type: string
        required: true
        default: customprop
