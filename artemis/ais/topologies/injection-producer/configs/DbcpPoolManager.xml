<!--
# ################################################################################################
# driverClassName          The fully qualified Java class name of the JDBC driver to be used.
# url                      The connection URL to be passed to our JDBC driver to establish a connection.
# username                 The connection username to be passed to our JDBC driver to establish a connection.
# password                 The connection password to be passed to our JDBC driver to establish a connection.
# autoCommit               The default auto-commit state of connections created by this pool.
# readOnly                 The default read-only state of connections created by this pool.
# maxActive                The maximum number of active connections that can be allocated from this pool at the same time,
#                          or zero for no limit.
# maxIdle                  The maximum number of active connections that can remain idle in the pool,
#                          without extra ones being released, or zero for no limit.
# minIdle                  The minimum number of active connections that can remain idle in the pool,
#                          without extra ones being created, or zero to create none.
# maxWait                  The maximum number of seconds that the pool will wait
#                          (when there are no available connections) for a connection to be returned before throwing an exception,
#                          or -1 to wait indefinitely.
# validationQuery          The SQL query that will be used to validate connections from this pool before returning them to the caller.
#                          If specified, this query MUST be an SQL SELECT statement that returns at least one row.
# testOnBorrow             The indication of whether objects will be validated before being borrowed from the pool.
#                          If the object fails to validate, it will be dropped from the pool, and we will attempt to borrow another.
# testOnReturn             The indication of whether objects will be validated before being returned to the pool.
# testWhileIdle            The indication of whether objects will be validated by the idle object evictor (if any).
#                          If an object fails to validate, it will be dropped from the pool.
# timeBetweenEvictionRuns  The number of seconds to sleep between runs of the idle object evictor thread.
#                          When non-positive, no idle object evictor thread will be run.
# minEvictableIdleTime     The minimum amount of time an object may sit idle in the pool
#                          before it is eligable for eviction by the idle object evictor (if any).
# numTestsPerEvictionRun   The number of objects to examine during each run of the idle object evictor thread (if any).
# ################################################################################################

-->
<DbcpPoolManager>

    <datasource>
        <name>uda</name>
        <driverClassName>org.postgresql.Driver</driverClassName>

        <url>TPL-USER-BDD-HOST</url>
        <username>TPL-USER-BDD-USER</username>
        <password>TPL-USER-BDD-PWD</password>
        <autoCommit>false</autoCommit>
        <readOnly>false</readOnly>
        <minIdle>2</minIdle>
        <maxActive>30</maxActive>
        <maxIdle>30</maxIdle>
        <maxWait>10</maxWait>
        <validationQuery></validationQuery>
        <testOnBorrow>true</testOnBorrow>
        <testOnReturn>false</testOnReturn>
        <testWhileIdle>true</testWhileIdle>
        <timeBetweenEvictionRuns>900</timeBetweenEvictionRuns>
        <minEvictableIdleTime>900</minEvictableIdleTime>
        <numTestsPerEvictionRun>-1</numTestsPerEvictionRun>
        <dataSourceClassName>fr.cls.commons.pool.InitializableDataSource</dataSourceClassName>
        <dataSourceClassParameter></dataSourceClassParameter>
    </datasource>
    <!--datasource>
        <name>mongo1</name>
        <mongo-pool open-port-number="1">
            <datawh-web.vlandata.cls.fr>
            <datawh-dev.cls.fr>
            <mongoHost>TPL-MOBILE-BDD-HOST</mongoHost>
            <mongoPort>TPL-MOBILE-BDD-PORT</mongoPort>
            <dbOnline>online</dbOnline>
            <dbLast>lastPos1</dbLast>
            <user name="uda" pass="muda" auth="TPL-MONGO-PWD-ENCRYPTION" />
            <writeType>ack</writeType>
            <readType>secondaryPref</readType>
            <collections>
                <collection key="daysRtColl" dbName="online" collName="daysRt" />
                <collection key="nLastPosRtColl" dbName="lastPos1" collName="nLastPosRt" />
                <collection key="lastPosColl" dbName="online" collName="lastPos" />
                <collection key="lastDeclColl" dbName="online" collName="lastDecl" />
                <collection key="ihsDeclColl" dbName="online" collName="ihsDecl" />
                <collection key="histDeclColl" dbName="histDecl" collName="histDecl" />
            </collections>
            <nbDaysToKeep>5</nbDaysToKeep>
        </mongo-pool>
    </datasource-->
</DbcpPoolManager>